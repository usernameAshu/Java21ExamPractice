//Chubb
1. Remove duplicates from an array.
i/p: [1,2,5,3,5,2,1] => o/p: [1,2,5,3]

2. Given a map of Name and Salary, Group employees based on salary.
i/p: {John: 1000, Jane: 1500, Doe: 1000, Smith: 2000} => o/p: {1000: [John, Doe], 1500: [Jane], 2000: [Smith]}

//NetCracker

1. Group anagrams: Anagrams are strings which have same characters but in different order.
i/p: ['cat', 'dog', 'tac', 'god', 'act'] => o/p: [['cat', 'tac', 'act'], ['dog', 'god']]

2. Given a list of names, convert it to a map of index and name.
i/p: ['John', 'Jane', 'Doe', 'Smith'] => o/p: {0: 'John', 1: 'Jane', 2: 'Doe', 3: 'Smith'}

Round 2:
1. Given a list of integers, find out the largest number that can be formed by concatenating the integers.
i/p: [3, 30, 34, 5, 9] => o/p: 9534330

//Morgan & Stanley
1. Given a Collection of Jobs, where each job has start and end time.
Find the maximum number of jobs that can be executed sequentially. No two jobs can be executed at the same time.
i/p: int[][] jobs = {{1, 3}, {1, 3}, {2, 4}, {3, 4}, {1, 4}};
o/p: 3

2. Given a list of integers, replace the elements with the next greater element on the right side.
Else, replace it with -1.
i/p: [4, 5, 2, 10, 8] => o/p: [5, 10, 10, -1, -1]

//Koch Industries
1. Given an array of Integers, rotate the array by 'k' elements.
i/p: [1, 2, 3, 4, 5, 6, 7] and k = 3 => o/p: [5, 6, 7, 1, 2, 3, 4]

2. Given a list of Employees, where each Employee has salary & designation. Both are integers.
Find the employee with least designation. Least designation is 0, maximum is 10.
If you have multiple employees with the same designation,
then find the employee with the highest salary.
i/p: [{1000, 5}, {1500, 3}, {2000, 5}, {2500, 3}, {3000, 5}] => o/p: {2500, 3}

//IBS
Coding round:
1. Find the max sub array product, return the product value
i/p: [2, 3, -2, 4] => o/p: 6
2. Given two strings (s & t), return the first index where the string 's' has an anagram with 't'.
Example: s = "cbaebabacd", t = "abc" => o/p: 0
Tech round 1:
1. Given an array of letters, which contains alphabets and asterisk(*). We need to create an array
with only the alphabets in the same order.
Example: ['a', 'b', '*', 'c', 'd', '*'] => ['a', 'b', 'c', 'd']
2. Given a list of houses with their networth in integers, there is a thief who can rob the houses
but he cannot rob two adjacent houses. Find the maximum networth he can rob.
Example: [2, 7, 9, 3, 1] => 12
3. Explain the project and the role in the project.
4. Database questions:
a. What is the difference between SQL and NoSQL?
b. What is database sharding and how it is implemented?
c. What is database partioning and how it is implemented?
5. How to make application scalable?
6. What happens when HashMap is full and how to handle it?
Answer: When the HashMap is full, the load factor is increased and the size of the HashMap is doubled.
7. How it affects the key-value pair in the HashMap?
Answer: The key-value pair is stored in the bucket of the HashMap. When the HashMap is full,
the bucket is increased and the key-value pair is stored in the new bucket.
8. What is key rehashing?
Answer: When the HashMap is full, the key rehashing is done to store the key-value pair in the new bucket.

Tech Round 2:
1. What are primary index and secondary index ?
2. In database shards how to handle query where range falls between 2 shards ?
3. There is an email field in database, one million records. We need to query based on email,
how to optimise the search , without using normal equals search ?
4. What is the difference between Component and Service annotation ?
5. How can we configure multiple datasources in spring boot application ?
6. Algorithm question:
Given a list of integers, find the maximum number on immediate right side of the current element.
Example: [2, 3, 1, 4, 5] => [3, 4, 4, 5, -1]

//Bharat Connect (NPCI)
Round 1: (Coding round, HackerRank)
Coding questions: 
Algorithm question:
1. Given 2 strings, and a cost integer. 
We need to replace the letter of 1st string with the 2nd string letter by letter, where the absolute difference between the 2 letters is less than the cost.
Find out the maximum substring with such replacement.
2. 
Spring boot API design:
1. Given an application, fix the existing bugs and add rest endpoints and test with Junit test case.
2. Given an existing app, fix the bugs and execute the test cases.
SQL query to print the names whose firstName & lastName is more than 12 letters

Round 2: Tech round
1. Sort employee list based on salary
2. From tables of customers and orders , print the customer_name and customer_id for shopping over 500.

Round 3: Manager Round
1. How to architect a distributed messaging queue system ?
2. How to handle events which are getting failed ?
3. How to fix an application which is getting exhausted (thread-pools) by the incoming requests from topic ? (Thread-timeout)
4. In a pub-sub model, lets say if there is a huge thread-contention, how to handle that? (Thread-coordinator)
5. In applications, queries are taking huge time to finish, what can we do ? (Database partition & sharding)
6. If we need to create an index for a small dataset, and since BTree index will be a overkill, which index is preferred ?


//Shell Recharge
Round 1: Coding round (HackerRank)
1. Given a integer array jumps, where each jumps says you have to go up or down.
Return the minimum starting stair, so that at any jump you don't go below 1.
Example: jumps array: [1,-2, -4, 3] => o/p: 6 (starting stair)
Demo:
starting stair    Jump
6                  1
7                  -2
5                  -4
1                  3
4
So, it means you have to start from 6th stair, so that you don't go below 1.

2. Rest API question, call a GET api using java HttpClient and fetch the calling code from the response.
API: https://jsonmock.hackerrank.com/api/countries?name={country_name}
Example: https://jsonmock.hackerrank.com/api/countries?name=India
Take care for countries with 2 words like 'United States'
You need to join with "%20" for such countries.
example: https://jsonmock.hackerrank.com/api/countries?name=United%20States

3. MCQ questions regarding Java and SQL
Priority Queue
Try-catch-finally
SQL query syntax 
Calling non-static method from static method.


4. SQL query question:
Given 2 tables, Customers and Orders
Customers: customer_id, customer_name
Orders: order_id, customer_id, min_order_value, max_order_value, is_active
Print a report containing active customers ordered by customer_name. (below format)
customer_id, customer_name, min_order_value, max_order_value, total_ord_value



