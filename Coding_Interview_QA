//Chubb
1. Remove duplicates from an array.
i/p: [1,2,5,3,5,2,1] => o/p: [1,2,5,3]

2. Given a map of Name and Salary, Group employees based on salary.
i/p: {John: 1000, Jane: 1500, Doe: 1000, Smith: 2000} => o/p: {1000: [John, Doe], 1500: [Jane], 2000: [Smith]}

//NetCracker

1. Group anagrams: Anagrams are strings which have same characters but in different order.
i/p: ['cat', 'dog', 'tac', 'god', 'act'] => o/p: [['cat', 'tac', 'act'], ['dog', 'god']]

2. Given a list of names, convert it to a map of index and name.
i/p: ['John', 'Jane', 'Doe', 'Smith'] => o/p: {0: 'John', 1: 'Jane', 2: 'Doe', 3: 'Smith'}

//Morgan & Stanley
1. Given a Collection of Jobs, where each job has start and end time.
Find the maximum number of jobs that can be executed sequentially. No two jobs can be executed at the same time.
i/p: int[][] jobs = {{1, 3}, {1, 3}, {2, 4}, {3, 4}, {1, 4}};
o/p: 3

2. Given a list of integers, replace the elements with the next greater element on the right side.
Else, replace it with -1.
i/p: [4, 5, 2, 10, 8] => o/p: [5, 10, 10, -1, -1]

//Koch Industries
1. Given an array of Integers, rotate the array by 'k' elements.
i/p: [1, 2, 3, 4, 5, 6, 7] and k = 3 => o/p: [5, 6, 7, 1, 2, 3, 4]

2. Given a list of Employees, where each Employee has salary & designation. Both are integers.
Find the employee with least designation. Least designation is 0, maximum is 10.
If you have multiple employees with the same designation,
then find the employee with the highest salary.
i/p: [{1000, 5}, {1500, 3}, {2000, 5}, {2500, 3}, {3000, 5}] => o/p: {2500, 3}


